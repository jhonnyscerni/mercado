# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pipeline
on:
  push:
    branches: [ "build" ]
  pull_request:
    branches: [ "build" ]

jobs:
#  tests:
#    name: Run Unit tests
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#          cache: maven
#      - name: Build with Maven
#        run: mvn -B test --file pom.xml
#
  build:
#    needs: tests
    name: Build maven package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build package war
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload .war
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/app.war

#  deploy:
#    needs: build
#    name: Deploy on AWS Elastic Beanstall
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download war
#        uses: actions/download-artifact@v2
#        with:
#          name: artifact
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v20
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          use_existing_version_if_available: true
#          wait_for_environment_recovery: 120
#          application_name: app-spring-boot
#          environment_name: Appspringboot-env
#          version_label: latest-${{github.sha}}
#          region: us-east-1
#          deployment_package: app.war
